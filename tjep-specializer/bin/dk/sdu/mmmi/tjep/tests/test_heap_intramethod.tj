package test_heap_intramethod;

//
// Simple propagation / statement reduction
//
scenario HeapObjectResidualization {
	?Box@1 a;
	?a = ?new Box@1(dynamic(int,input));
	?int b;
	?b = ?a.value;
} assert {
	Box@1 a; a = new Box@1(dynamic(int,input));
	int b; b = a.value;
}

scenario HeapSimplePropagation {
	$Box@2 a;
	$a = $new Box@2(87);
	?int b;
	?b = lift($a.value);
} assert {
	int b; b = 87;
}

scenario HeapSimpleUpdate {
	$Box@2 a;
	$a = $new Box@2(87);
	$a.value = ($a.value) $+ 1;
	?int b;
	?b = lift($a.value);
} assert {
	int b; b = 88;	
}

//
// Speculative evaluation
//
scenario HeapDynamicConditional {
	$Box@2 a;
	$a = $new Box@2(87);
	?int b;
	if(dynamic(int,input)) {
		$a.value = ($a.value) $+ 1;
		?b = lift($a.value);		
	} else {
		$a.value = ($a.value) $- 1;
		?b = lift($a.value);
	}
} assert {
	int b;
	if(dynamic(int,input)) {
		b = 88;
	} else {
		b = 86;
	}
}

//
// Heap values
// 
class Box@1 extends Object { // Dynamic variant
	int value;
}

class Box@2 extends Object { // Static variant
	$int value;
}

//
// Auxiliary declarations
//

primitive int;
