/*
* generated by Xtext
*/
grammar InternalTJ;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package dk.sdu.mmmi.tjep.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package dk.sdu.mmmi.tjep.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import dk.sdu.mmmi.tjep.services.TJGrammarAccess;

}

@parser::members {

 	private TJGrammarAccess grammarAccess;
 	
    public InternalTJParser(TokenStream input, TJGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Program";	
   	}
   	
   	@Override
   	protected TJGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleProgram
entryRuleProgram returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProgramRule()); }
	 iv_ruleProgram=ruleProgram 
	 { $current=$iv_ruleProgram.current; } 
	 EOF 
;

// Rule Program
ruleProgram returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='package' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getProgramAccess().getPackageKeyword_0());
    }
(
(
		lv_pkgname_1_0=RULE_ID
		{
			newLeafNode(lv_pkgname_1_0, grammarAccess.getProgramAccess().getPkgnameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProgramRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"pkgname",
        		lv_pkgname_1_0, 
        		"ID");
	    }

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getProgramAccess().getSemicolonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getScenariosScenarioParserRuleCall_3_0()); 
	    }
		lv_scenarios_3_0=ruleScenario		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgramRule());
	        }
       		add(
       			$current, 
       			"scenarios",
        		lv_scenarios_3_0, 
        		"Scenario");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getTypesTypeParserRuleCall_4_0()); 
	    }
		lv_types_4_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgramRule());
	        }
       		add(
       			$current, 
       			"types",
        		lv_types_4_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleScenario
entryRuleScenario returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScenarioRule()); }
	 iv_ruleScenario=ruleScenario 
	 { $current=$iv_ruleScenario.current; } 
	 EOF 
;

// Rule Scenario
ruleScenario returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='scenario' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getScenarioAccess().getScenarioKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getScenarioAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScenarioRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getScenarioAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScenarioAccess().getTargetStatementParserRuleCall_3_0()); 
	    }
		lv_target_3_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScenarioRule());
	        }
       		add(
       			$current, 
       			"target",
        		lv_target_3_0, 
        		"Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getScenarioAccess().getRightCurlyBracketKeyword_4());
    }
(	otherlv_5='assert' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getScenarioAccess().getAssertKeyword_5_0());
    }
	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getScenarioAccess().getLeftCurlyBracketKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScenarioAccess().getAssertionStatementParserRuleCall_5_2_0()); 
	    }
		lv_assertion_7_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScenarioRule());
	        }
       		add(
       			$current, 
       			"assertion",
        		lv_assertion_7_0, 
        		"Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getScenarioAccess().getRightCurlyBracketKeyword_5_3());
    }
)?)
;





// Entry rule entryRuleBT
entryRuleBT returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBTRule()); }
	 iv_ruleBT=ruleBT 
	 { $current=$iv_ruleBT.current; } 
	 EOF 
;

// Rule BT
ruleBT returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBTAccess().getStaticAction_0_0(),
            $current);
    }
)	otherlv_1='$' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBTAccess().getDollarSignKeyword_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBTAccess().getDynamicAction_1_0(),
            $current);
    }
)	otherlv_3='?' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBTAccess().getQuestionMarkKeyword_1_1());
    }
))
;





// Entry rule entryRuleType
entryRuleType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	 iv_ruleType=ruleType 
	 { $current=$iv_ruleType.current; } 
	 EOF 
;

// Rule Type
ruleType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getPrimitiveParserRuleCall_0()); 
    }
    this_Primitive_0=rulePrimitive
    { 
        $current = $this_Primitive_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getClazzParserRuleCall_1()); 
    }
    this_Clazz_1=ruleClazz
    { 
        $current = $this_Clazz_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePrimitive
entryRulePrimitive returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimitiveRule()); }
	 iv_rulePrimitive=rulePrimitive 
	 { $current=$iv_rulePrimitive.current; } 
	 EOF 
;

// Rule Primitive
rulePrimitive returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='primitive' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPrimitiveAccess().getPrimitiveKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getPrimitiveAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPrimitiveAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleClazz
entryRuleClazz returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClazzRule()); }
	 iv_ruleClazz=ruleClazz 
	 { $current=$iv_ruleClazz.current; } 
	 EOF 
;

// Rule Clazz
ruleClazz returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='class' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getClazzAccess().getClassKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getClazzAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClazzRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='@' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getClazzAccess().getCommercialAtKeyword_2_0());
    }
(
(
		lv_variant_3_0=RULE_INT
		{
			newLeafNode(lv_variant_3_0, grammarAccess.getClazzAccess().getVariantINTTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClazzRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"variant",
        		lv_variant_3_0, 
        		"INT");
	    }

)
))?	otherlv_4='extends' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getClazzAccess().getExtendsKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getClazzRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getClazzAccess().getBaseClazzCrossReference_4_0()); 
	}

)
)	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getClazzAccess().getLeftCurlyBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClazzAccess().getMembersMemberParserRuleCall_6_0()); 
	    }
		lv_members_7_0=ruleMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClazzRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_7_0, 
        		"Member");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getClazzAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleMember
entryRuleMember returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMemberRule()); }
	 iv_ruleMember=ruleMember 
	 { $current=$iv_ruleMember.current; } 
	 EOF 
;

// Rule Member
ruleMember returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMemberAccess().getFieldParserRuleCall_0()); 
    }
    this_Field_0=ruleField
    { 
        $current = $this_Field_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMemberAccess().getMethodParserRuleCall_1()); 
    }
    this_Method_1=ruleMethod
    { 
        $current = $this_Method_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMemberAccess().getConstructorParserRuleCall_2()); 
    }
    this_Constructor_2=ruleConstructor
    { 
        $current = $this_Constructor_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleField
entryRuleField returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFieldRule()); }
	 iv_ruleField=ruleField 
	 { $current=$iv_ruleField.current; } 
	 EOF 
;

// Rule Field
ruleField returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getFieldAccess().getBtBTParserRuleCall_0_0()); 
	    }
		lv_bt_0_0=ruleBT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFieldRule());
	        }
       		set(
       			$current, 
       			"bt",
        		lv_bt_0_0, 
        		"BT");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_final_1_0=	'final' 
    {
        newLeafNode(lv_final_1_0, grammarAccess.getFieldAccess().getFinalFinalKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFieldRule());
	        }
       		setWithLastConsumed($current, "final", true, "final");
	    }

)
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFieldRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getFieldAccess().getTypeTypeCrossReference_2_0()); 
	}

)
)(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFieldRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
)	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFieldAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleMethod
entryRuleMethod returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMethodRule()); }
	 iv_ruleMethod=ruleMethod 
	 { $current=$iv_ruleMethod.current; } 
	 EOF 
;

// Rule Method
ruleMethod returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getMethodAccess().getBtBTParserRuleCall_0_0()); 
	    }
		lv_bt_0_0=ruleBT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodRule());
	        }
       		set(
       			$current, 
       			"bt",
        		lv_bt_0_0, 
        		"BT");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMethodRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getMethodAccess().getTypeTypeCrossReference_1_0()); 
	}

)
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMethodRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(	otherlv_3='@' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMethodAccess().getCommercialAtKeyword_3_0());
    }
(
(
		lv_variant_4_0=RULE_INT
		{
			newLeafNode(lv_variant_4_0, grammarAccess.getMethodAccess().getVariantINTTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMethodRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"variant",
        		lv_variant_4_0, 
        		"INT");
	    }

)
))?	otherlv_5='(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMethodAccess().getLeftParenthesisKeyword_4());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getMethodAccess().getParamsParameterParserRuleCall_5_0_0()); 
	    }
		lv_params_6_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_6_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMethodAccess().getCommaKeyword_5_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodAccess().getParamsParameterParserRuleCall_5_1_1_0()); 
	    }
		lv_params_8_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_8_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMethodAccess().getRightParenthesisKeyword_6());
    }
	otherlv_10='{' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getMethodAccess().getLeftCurlyBracketKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodAccess().getBodyStatementParserRuleCall_8_0()); 
	    }
		lv_body_11_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodRule());
	        }
       		add(
       			$current, 
       			"body",
        		lv_body_11_0, 
        		"Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getMethodAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	 iv_ruleParameter=ruleParameter 
	 { $current=$iv_ruleParameter.current; } 
	 EOF 
;

// Rule Parameter
ruleParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getParameterAccess().getBtBTParserRuleCall_0_0()); 
	    }
		lv_bt_0_0=ruleBT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterRule());
	        }
       		set(
       			$current, 
       			"bt",
        		lv_bt_0_0, 
        		"BT");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getParameterAccess().getTypeTypeCrossReference_1_0()); 
	}

)
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleConstructor
entryRuleConstructor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstructorRule()); }
	 iv_ruleConstructor=ruleConstructor 
	 { $current=$iv_ruleConstructor.current; } 
	 EOF 
;

// Rule Constructor
ruleConstructor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getConstructorAccess().getBtBTParserRuleCall_0_0()); 
	    }
		lv_bt_0_0=ruleBT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstructorRule());
	        }
       		set(
       			$current, 
       			"bt",
        		lv_bt_0_0, 
        		"BT");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstructorRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getConstructorAccess().getClazzClazzCrossReference_1_0()); 
	}

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getConstructorAccess().getLeftParenthesisKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getConstructorAccess().getParamsParameterParserRuleCall_3_0_0()); 
	    }
		lv_params_3_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstructorRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_3_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getConstructorAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstructorAccess().getParamsParameterParserRuleCall_3_1_1_0()); 
	    }
		lv_params_5_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstructorRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_5_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getConstructorAccess().getRightParenthesisKeyword_4());
    }
	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getConstructorAccess().getLeftCurlyBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstructorAccess().getBodyStatementParserRuleCall_6_0()); 
	    }
		lv_body_8_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstructorRule());
	        }
       		add(
       			$current, 
       			"body",
        		lv_body_8_0, 
        		"Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getConstructorAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	 iv_ruleStatement=ruleStatement 
	 { $current=$iv_ruleStatement.current; } 
	 EOF 
;

// Rule Statement
ruleStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getVarDeclParserRuleCall_0()); 
    }
    this_VarDecl_0=ruleVarDecl
    { 
        $current = $this_VarDecl_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getLocalAssignParserRuleCall_1()); 
    }
    this_LocalAssign_1=ruleLocalAssign
    { 
        $current = $this_LocalAssign_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getFieldAssignParserRuleCall_2()); 
    }
    this_FieldAssign_2=ruleFieldAssign
    { 
        $current = $this_FieldAssign_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getConditionParserRuleCall_3()); 
    }
    this_Condition_3=ruleCondition
    { 
        $current = $this_Condition_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getWhileParserRuleCall_4()); 
    }
    this_While_4=ruleWhile
    { 
        $current = $this_While_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getReturnParserRuleCall_5()); 
    }
    this_Return_5=ruleReturn
    { 
        $current = $this_Return_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getSingleExprParserRuleCall_6()); 
    }
    this_SingleExpr_6=ruleSingleExpr
    { 
        $current = $this_SingleExpr_6.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleVarDecl
entryRuleVarDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVarDeclRule()); }
	 iv_ruleVarDecl=ruleVarDecl 
	 { $current=$iv_ruleVarDecl.current; } 
	 EOF 
;

// Rule VarDecl
ruleVarDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getVarDeclAccess().getBtBTParserRuleCall_0_0()); 
	    }
		lv_bt_0_0=ruleBT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVarDeclRule());
	        }
       		set(
       			$current, 
       			"bt",
        		lv_bt_0_0, 
        		"BT");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVarDeclRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getVarDeclAccess().getTypeTypeCrossReference_1_0()); 
	}

)
)(	otherlv_2='@' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVarDeclAccess().getCommercialAtKeyword_2_0());
    }
(
(
		lv_variant_3_0=RULE_INT
		{
			newLeafNode(lv_variant_3_0, grammarAccess.getVarDeclAccess().getVariantINTTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVarDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"variant",
        		lv_variant_3_0, 
        		"INT");
	    }

)
))?(
(
		lv_name_4_0=RULE_ID
		{
			newLeafNode(lv_name_4_0, grammarAccess.getVarDeclAccess().getNameIDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVarDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_4_0, 
        		"ID");
	    }

)
)	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getVarDeclAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleLocalAssign
entryRuleLocalAssign returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLocalAssignRule()); }
	 iv_ruleLocalAssign=ruleLocalAssign 
	 { $current=$iv_ruleLocalAssign.current; } 
	 EOF 
;

// Rule LocalAssign
ruleLocalAssign returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getLocalAssignAccess().getBtBTParserRuleCall_0_0()); 
	    }
		lv_bt_0_0=ruleBT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocalAssignRule());
	        }
       		set(
       			$current, 
       			"bt",
        		lv_bt_0_0, 
        		"BT");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getLocalAssignAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLocalAssignRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLocalAssignAccess().getEqualsSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLocalAssignAccess().getRhsExprParserRuleCall_3_0()); 
	    }
		lv_rhs_3_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocalAssignRule());
	        }
       		set(
       			$current, 
       			"rhs",
        		lv_rhs_3_0, 
        		"Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLocalAssignAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleFieldAssign
entryRuleFieldAssign returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFieldAssignRule()); }
	 iv_ruleFieldAssign=ruleFieldAssign 
	 { $current=$iv_ruleFieldAssign.current; } 
	 EOF 
;

// Rule FieldAssign
ruleFieldAssign returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getFieldAssignAccess().getBtBTParserRuleCall_0_0_0()); 
	    }
		lv_bt_0_0=ruleBT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFieldAssignRule());
	        }
       		set(
       			$current, 
       			"bt",
        		lv_bt_0_0, 
        		"BT");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_object_1_0=RULE_ID
		{
			newLeafNode(lv_object_1_0, grammarAccess.getFieldAssignAccess().getObjectIDTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFieldAssignRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"object",
        		lv_object_1_0, 
        		"ID");
	    }

)
)	otherlv_2='.' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFieldAssignAccess().getFullStopKeyword_0_2());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getFieldAssignAccess().getNameIDTerminalRuleCall_0_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFieldAssignRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
)	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFieldAssignAccess().getEqualsSignKeyword_0_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFieldAssignAccess().getRhsExprParserRuleCall_0_5_0()); 
	    }
		lv_rhs_5_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFieldAssignRule());
	        }
       		set(
       			$current, 
       			"rhs",
        		lv_rhs_5_0, 
        		"Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=';' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getFieldAssignAccess().getSemicolonKeyword_0_6());
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getFieldAssignAccess().getBtBTParserRuleCall_1_0_0()); 
	    }
		lv_bt_7_0=ruleBT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFieldAssignRule());
	        }
       		set(
       			$current, 
       			"bt",
        		lv_bt_7_0, 
        		"BT");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_8='this' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getFieldAssignAccess().getThisKeyword_1_1());
    }
	otherlv_9='.' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getFieldAssignAccess().getFullStopKeyword_1_2());
    }
(
(
		lv_name_10_0=RULE_ID
		{
			newLeafNode(lv_name_10_0, grammarAccess.getFieldAssignAccess().getNameIDTerminalRuleCall_1_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFieldAssignRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_10_0, 
        		"ID");
	    }

)
)	otherlv_11='=' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getFieldAssignAccess().getEqualsSignKeyword_1_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFieldAssignAccess().getRhsExprParserRuleCall_1_5_0()); 
	    }
		lv_rhs_12_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFieldAssignRule());
	        }
       		set(
       			$current, 
       			"rhs",
        		lv_rhs_12_0, 
        		"Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13=';' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getFieldAssignAccess().getSemicolonKeyword_1_6());
    }
))
;





// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	 iv_ruleCondition=ruleCondition 
	 { $current=$iv_ruleCondition.current; } 
	 EOF 
;

// Rule Condition
ruleCondition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getConditionAccess().getBtBTParserRuleCall_0_0()); 
	    }
		lv_bt_0_0=ruleBT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionRule());
	        }
       		set(
       			$current, 
       			"bt",
        		lv_bt_0_0, 
        		"BT");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_1='if' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConditionAccess().getIfKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getConditionAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionAccess().getCondExprParserRuleCall_3_0()); 
	    }
		lv_cond_3_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionRule());
	        }
       		set(
       			$current, 
       			"cond",
        		lv_cond_3_0, 
        		"Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getConditionAccess().getRightParenthesisKeyword_4());
    }
	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getConditionAccess().getLeftCurlyBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionAccess().getThenBodyStatementParserRuleCall_6_0()); 
	    }
		lv_thenBody_6_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionRule());
	        }
       		add(
       			$current, 
       			"thenBody",
        		lv_thenBody_6_0, 
        		"Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getConditionAccess().getRightCurlyBracketKeyword_7());
    }
	otherlv_8='else' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getConditionAccess().getElseKeyword_8());
    }
	otherlv_9='{' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getConditionAccess().getLeftCurlyBracketKeyword_9());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionAccess().getElseBodyStatementParserRuleCall_10_0()); 
	    }
		lv_elseBody_10_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionRule());
	        }
       		add(
       			$current, 
       			"elseBody",
        		lv_elseBody_10_0, 
        		"Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getConditionAccess().getRightCurlyBracketKeyword_11());
    }
)
;





// Entry rule entryRuleWhile
entryRuleWhile returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWhileRule()); }
	 iv_ruleWhile=ruleWhile 
	 { $current=$iv_ruleWhile.current; } 
	 EOF 
;

// Rule While
ruleWhile returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getWhileAccess().getBtBTParserRuleCall_0_0()); 
	    }
		lv_bt_0_0=ruleBT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhileRule());
	        }
       		set(
       			$current, 
       			"bt",
        		lv_bt_0_0, 
        		"BT");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_1='while' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getWhileAccess().getWhileKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getWhileAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhileAccess().getCondExprParserRuleCall_3_0()); 
	    }
		lv_cond_3_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhileRule());
	        }
       		set(
       			$current, 
       			"cond",
        		lv_cond_3_0, 
        		"Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getWhileAccess().getRightParenthesisKeyword_4());
    }
	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getWhileAccess().getLeftCurlyBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhileAccess().getBodyStatementParserRuleCall_6_0()); 
	    }
		lv_body_6_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhileRule());
	        }
       		add(
       			$current, 
       			"body",
        		lv_body_6_0, 
        		"Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getWhileAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleReturn
entryRuleReturn returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReturnRule()); }
	 iv_ruleReturn=ruleReturn 
	 { $current=$iv_ruleReturn.current; } 
	 EOF 
;

// Rule Return
ruleReturn returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getReturnAccess().getBtBTParserRuleCall_0_0()); 
	    }
		lv_bt_0_0=ruleBT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReturnRule());
	        }
       		set(
       			$current, 
       			"bt",
        		lv_bt_0_0, 
        		"BT");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_1='return' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getReturnAccess().getReturnKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getReturnAccess().getExpExprParserRuleCall_2_0()); 
	    }
		lv_exp_2_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReturnRule());
	        }
       		set(
       			$current, 
       			"exp",
        		lv_exp_2_0, 
        		"Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getReturnAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleSingleExpr
entryRuleSingleExpr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSingleExprRule()); }
	 iv_ruleSingleExpr=ruleSingleExpr 
	 { $current=$iv_ruleSingleExpr.current; } 
	 EOF 
;

// Rule SingleExpr
ruleSingleExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getSingleExprAccess().getBtBTParserRuleCall_0_0_0()); 
	    }
		lv_bt_0_0=ruleBT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSingleExprRule());
	        }
       		set(
       			$current, 
       			"bt",
        		lv_bt_0_0, 
        		"BT");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSingleExprAccess().getColonKeyword_0_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSingleExprAccess().getExpExprParserRuleCall_1_0()); 
	    }
		lv_exp_2_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSingleExprRule());
	        }
       		set(
       			$current, 
       			"exp",
        		lv_exp_2_0, 
        		"Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSingleExprAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleExpr
entryRuleExpr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExprRule()); }
	 iv_ruleExpr=ruleExpr 
	 { $current=$iv_ruleExpr.current; } 
	 EOF 
;

// Rule Expr
ruleExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExprAccess().getAnnotatedExprParserRuleCall_0()); 
    }
    this_AnnotatedExpr_0=ruleAnnotatedExpr
    { 
        $current = $this_AnnotatedExpr_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExprAccess().getArithExpParserRuleCall_1()); 
    }
    this_ArithExp_1=ruleArithExp
    { 
        $current = $this_ArithExp_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExprAccess().getLiftExpParserRuleCall_2()); 
    }
    this_LiftExp_2=ruleLiftExp
    { 
        $current = $this_LiftExp_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleLiftExp
entryRuleLiftExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLiftExpRule()); }
	 iv_ruleLiftExp=ruleLiftExp 
	 { $current=$iv_ruleLiftExp.current; } 
	 EOF 
;

// Rule LiftExp
ruleLiftExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='lift' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLiftExpAccess().getLiftKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLiftExpAccess().getExpExprParserRuleCall_1_0()); 
	    }
		lv_exp_1_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiftExpRule());
	        }
       		set(
       			$current, 
       			"exp",
        		lv_exp_1_0, 
        		"Expr");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAnnotatedExpr
entryRuleAnnotatedExpr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnnotatedExprRule()); }
	 iv_ruleAnnotatedExpr=ruleAnnotatedExpr 
	 { $current=$iv_ruleAnnotatedExpr.current; } 
	 EOF 
;

// Rule AnnotatedExpr
ruleAnnotatedExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotatedExprAccess().getBtBTParserRuleCall_0_0_0()); 
	    }
		lv_bt_0_0=ruleBT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotatedExprRule());
	        }
       		set(
       			$current, 
       			"bt",
        		lv_bt_0_0, 
        		"BT");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotatedExprAccess().getExpObjectOpParserRuleCall_0_1_0()); 
	    }
		lv_exp_1_0=ruleObjectOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotatedExprRule());
	        }
       		set(
       			$current, 
       			"exp",
        		lv_exp_1_0, 
        		"ObjectOp");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAnnotatedExprAccess().getThisAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotatedExprAccess().getBtBTParserRuleCall_1_1_0()); 
	    }
		lv_bt_3_0=ruleBT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotatedExprRule());
	        }
       		set(
       			$current, 
       			"bt",
        		lv_bt_3_0, 
        		"BT");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_4='this' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAnnotatedExprAccess().getThisKeyword_1_2());
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotatedExprAccess().getBtBTParserRuleCall_2_0_0()); 
	    }
		lv_bt_5_0=ruleBT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotatedExprRule());
	        }
       		set(
       			$current, 
       			"bt",
        		lv_bt_5_0, 
        		"BT");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotatedExprAccess().getExpInstantiationParserRuleCall_2_1_0()); 
	    }
		lv_exp_6_0=ruleInstantiation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotatedExprRule());
	        }
       		set(
       			$current, 
       			"exp",
        		lv_exp_6_0, 
        		"Instantiation");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleObjectOp
entryRuleObjectOp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getObjectOpRule()); }
	 iv_ruleObjectOp=ruleObjectOp 
	 { $current=$iv_ruleObjectOp.current; } 
	 EOF 
;

// Rule ObjectOp
ruleObjectOp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_object_0_0=RULE_ID
		{
			newLeafNode(lv_object_0_0, grammarAccess.getObjectOpAccess().getObjectIDTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getObjectOpRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"object",
        		lv_object_0_0, 
        		"ID");
	    }

)
)	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getObjectOpAccess().getFullStopKeyword_0_1());
    }
(	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getObjectOpAccess().getLeftParenthesisKeyword_0_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getObjectOpRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getObjectOpAccess().getQualifierClazzCrossReference_0_2_1_0()); 
	}

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getObjectOpAccess().getRightParenthesisKeyword_0_2_2());
    }
)?(
(
		lv_name_5_0=RULE_ID
		{
			newLeafNode(lv_name_5_0, grammarAccess.getObjectOpAccess().getNameIDTerminalRuleCall_0_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getObjectOpRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"ID");
	    }

)
)(	otherlv_6='@' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getObjectOpAccess().getCommercialAtKeyword_0_4_0());
    }
(
(
		lv_variant_7_0=RULE_INT
		{
			newLeafNode(lv_variant_7_0, grammarAccess.getObjectOpAccess().getVariantINTTerminalRuleCall_0_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getObjectOpRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"variant",
        		lv_variant_7_0, 
        		"INT");
	    }

)
))?(((	'(' 
)=>	otherlv_8='(' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getObjectOpAccess().getLeftParenthesisKeyword_0_5_0());
    }
)(
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getObjectOpAccess().getMethodCallTargetAction_0_5_1(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getObjectOpAccess().getArgumentExprParserRuleCall_0_5_2_0_0()); 
	    }
		lv_argument_10_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getObjectOpRule());
	        }
       		add(
       			$current, 
       			"argument",
        		lv_argument_10_0, 
        		"Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getObjectOpAccess().getCommaKeyword_0_5_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getObjectOpAccess().getArgumentExprParserRuleCall_0_5_2_1_1_0()); 
	    }
		lv_argument_12_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getObjectOpRule());
	        }
       		add(
       			$current, 
       			"argument",
        		lv_argument_12_0, 
        		"Expr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_13=')' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getObjectOpAccess().getRightParenthesisKeyword_0_5_3());
    }
)?)
    |(	otherlv_14='this' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getObjectOpAccess().getThisKeyword_1_0());
    }
	otherlv_15='.' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getObjectOpAccess().getFullStopKeyword_1_1());
    }
(	otherlv_16='(' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getObjectOpAccess().getLeftParenthesisKeyword_1_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getObjectOpRule());
	        }
        }
	otherlv_17=RULE_ID
	{
		newLeafNode(otherlv_17, grammarAccess.getObjectOpAccess().getQualifierClazzCrossReference_1_2_1_0()); 
	}

)
)	otherlv_18=')' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getObjectOpAccess().getRightParenthesisKeyword_1_2_2());
    }
)?(
(
		lv_name_19_0=RULE_ID
		{
			newLeafNode(lv_name_19_0, grammarAccess.getObjectOpAccess().getNameIDTerminalRuleCall_1_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getObjectOpRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_19_0, 
        		"ID");
	    }

)
)(	otherlv_20='@' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getObjectOpAccess().getCommercialAtKeyword_1_4_0());
    }
(
(
		lv_variant_21_0=RULE_INT
		{
			newLeafNode(lv_variant_21_0, grammarAccess.getObjectOpAccess().getVariantINTTerminalRuleCall_1_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getObjectOpRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"variant",
        		lv_variant_21_0, 
        		"INT");
	    }

)
))?(((	'(' 
)=>	otherlv_22='(' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getObjectOpAccess().getLeftParenthesisKeyword_1_5_0());
    }
)(
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getObjectOpAccess().getMethodCallTargetAction_1_5_1(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getObjectOpAccess().getArgumentExprParserRuleCall_1_5_2_0_0()); 
	    }
		lv_argument_24_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getObjectOpRule());
	        }
       		add(
       			$current, 
       			"argument",
        		lv_argument_24_0, 
        		"Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_25=',' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getObjectOpAccess().getCommaKeyword_1_5_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getObjectOpAccess().getArgumentExprParserRuleCall_1_5_2_1_1_0()); 
	    }
		lv_argument_26_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getObjectOpRule());
	        }
       		add(
       			$current, 
       			"argument",
        		lv_argument_26_0, 
        		"Expr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_27=')' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getObjectOpAccess().getRightParenthesisKeyword_1_5_3());
    }
)?))
;





// Entry rule entryRuleInstantiation
entryRuleInstantiation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstantiationRule()); }
	 iv_ruleInstantiation=ruleInstantiation 
	 { $current=$iv_ruleInstantiation.current; } 
	 EOF 
;

// Rule Instantiation
ruleInstantiation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='new' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInstantiationAccess().getNewKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstantiationRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getInstantiationAccess().getTypeClazzCrossReference_1_0()); 
	}

)
)(	otherlv_2='@' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInstantiationAccess().getCommercialAtKeyword_2_0());
    }
(
(
		lv_variant_3_0=RULE_INT
		{
			newLeafNode(lv_variant_3_0, grammarAccess.getInstantiationAccess().getVariantINTTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstantiationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"variant",
        		lv_variant_3_0, 
        		"INT");
	    }

)
))?	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInstantiationAccess().getLeftParenthesisKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstantiationAccess().getArgumentExprParserRuleCall_4_0_0()); 
	    }
		lv_argument_5_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstantiationRule());
	        }
       		add(
       			$current, 
       			"argument",
        		lv_argument_5_0, 
        		"Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getInstantiationAccess().getCommaKeyword_4_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstantiationAccess().getArgumentExprParserRuleCall_4_1_1_0()); 
	    }
		lv_argument_7_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstantiationRule());
	        }
       		add(
       			$current, 
       			"argument",
        		lv_argument_7_0, 
        		"Expr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getInstantiationAccess().getRightParenthesisKeyword_5());
    }
)
;





// Entry rule entryRuleArithExp
entryRuleArithExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArithExpRule()); }
	 iv_ruleArithExp=ruleArithExp 
	 { $current=$iv_ruleArithExp.current; } 
	 EOF 
;

// Rule ArithExp
ruleArithExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getArithExpAccess().getBinOpAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getArithExpAccess().getLhsAdditionParserRuleCall_1_0()); 
	    }
		lv_lhs_1_0=ruleAddition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArithExpRule());
	        }
       		set(
       			$current, 
       			"lhs",
        		lv_lhs_1_0, 
        		"Addition");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
(
		lv_op_2_1=	'<' 
    {
        newLeafNode(lv_op_2_1, grammarAccess.getArithExpAccess().getOpLessThanSignKeyword_2_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArithExpRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_1, null);
	    }

    |		lv_op_2_2=	'>' 
    {
        newLeafNode(lv_op_2_2, grammarAccess.getArithExpAccess().getOpGreaterThanSignKeyword_2_0_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArithExpRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_2, null);
	    }

    |		lv_op_2_3=	'==' 
    {
        newLeafNode(lv_op_2_3, grammarAccess.getArithExpAccess().getOpEqualsSignEqualsSignKeyword_2_0_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArithExpRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_3, null);
	    }

    |		lv_op_2_4=	'$<' 
    {
        newLeafNode(lv_op_2_4, grammarAccess.getArithExpAccess().getOpDollarSignLessThanSignKeyword_2_0_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArithExpRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_4, null);
	    }

    |		lv_op_2_5=	'?<' 
    {
        newLeafNode(lv_op_2_5, grammarAccess.getArithExpAccess().getOpQuestionMarkLessThanSignKeyword_2_0_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArithExpRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_5, null);
	    }

    |		lv_op_2_6=	'$>' 
    {
        newLeafNode(lv_op_2_6, grammarAccess.getArithExpAccess().getOpDollarSignGreaterThanSignKeyword_2_0_0_5());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArithExpRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_6, null);
	    }

    |		lv_op_2_7=	'?>' 
    {
        newLeafNode(lv_op_2_7, grammarAccess.getArithExpAccess().getOpQuestionMarkGreaterThanSignKeyword_2_0_0_6());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArithExpRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_7, null);
	    }

    |		lv_op_2_8=	'$==' 
    {
        newLeafNode(lv_op_2_8, grammarAccess.getArithExpAccess().getOpDollarSignEqualsSignEqualsSignKeyword_2_0_0_7());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArithExpRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_8, null);
	    }

    |		lv_op_2_9=	'?==' 
    {
        newLeafNode(lv_op_2_9, grammarAccess.getArithExpAccess().getOpQuestionMarkEqualsSignEqualsSignKeyword_2_0_0_8());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArithExpRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_9, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getArithExpAccess().getRhsArithExpParserRuleCall_2_1_0()); 
	    }
		lv_rhs_3_0=ruleArithExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArithExpRule());
	        }
       		set(
       			$current, 
       			"rhs",
        		lv_rhs_3_0, 
        		"ArithExp");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleAddition
entryRuleAddition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAdditionRule()); }
	 iv_ruleAddition=ruleAddition 
	 { $current=$iv_ruleAddition.current; } 
	 EOF 
;

// Rule Addition
ruleAddition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAdditionAccess().getBinOpAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAdditionAccess().getLhsMultiplicationParserRuleCall_1_0()); 
	    }
		lv_lhs_1_0=ruleMultiplication		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdditionRule());
	        }
       		set(
       			$current, 
       			"lhs",
        		lv_lhs_1_0, 
        		"Multiplication");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
(
		lv_op_2_1=	'+' 
    {
        newLeafNode(lv_op_2_1, grammarAccess.getAdditionAccess().getOpPlusSignKeyword_2_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAdditionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_1, null);
	    }

    |		lv_op_2_2=	'-' 
    {
        newLeafNode(lv_op_2_2, grammarAccess.getAdditionAccess().getOpHyphenMinusKeyword_2_0_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAdditionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_2, null);
	    }

    |		lv_op_2_3=	'$+' 
    {
        newLeafNode(lv_op_2_3, grammarAccess.getAdditionAccess().getOpDollarSignPlusSignKeyword_2_0_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAdditionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_3, null);
	    }

    |		lv_op_2_4=	'?+' 
    {
        newLeafNode(lv_op_2_4, grammarAccess.getAdditionAccess().getOpQuestionMarkPlusSignKeyword_2_0_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAdditionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_4, null);
	    }

    |		lv_op_2_5=	'$-' 
    {
        newLeafNode(lv_op_2_5, grammarAccess.getAdditionAccess().getOpDollarSignHyphenMinusKeyword_2_0_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAdditionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_5, null);
	    }

    |		lv_op_2_6=	'?-' 
    {
        newLeafNode(lv_op_2_6, grammarAccess.getAdditionAccess().getOpQuestionMarkHyphenMinusKeyword_2_0_0_5());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAdditionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_6, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAdditionAccess().getRhsAdditionParserRuleCall_2_1_0()); 
	    }
		lv_rhs_3_0=ruleAddition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdditionRule());
	        }
       		set(
       			$current, 
       			"rhs",
        		lv_rhs_3_0, 
        		"Addition");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleMultiplication
entryRuleMultiplication returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMultiplicationRule()); }
	 iv_ruleMultiplication=ruleMultiplication 
	 { $current=$iv_ruleMultiplication.current; } 
	 EOF 
;

// Rule Multiplication
ruleMultiplication returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getMultiplicationAccess().getBinOpAction_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMultiplicationAccess().getLhsBaseExpParserRuleCall_0_1_0()); 
	    }
		lv_lhs_1_0=ruleBaseExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultiplicationRule());
	        }
       		set(
       			$current, 
       			"lhs",
        		lv_lhs_1_0, 
        		"BaseExp");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
(
		lv_op_2_1=	'*' 
    {
        newLeafNode(lv_op_2_1, grammarAccess.getMultiplicationAccess().getOpAsteriskKeyword_0_2_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultiplicationRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_1, null);
	    }

    |		lv_op_2_2=	'/' 
    {
        newLeafNode(lv_op_2_2, grammarAccess.getMultiplicationAccess().getOpSolidusKeyword_0_2_0_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultiplicationRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_2, null);
	    }

    |		lv_op_2_3=	'$*' 
    {
        newLeafNode(lv_op_2_3, grammarAccess.getMultiplicationAccess().getOpDollarSignAsteriskKeyword_0_2_0_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultiplicationRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_3, null);
	    }

    |		lv_op_2_4=	'?*' 
    {
        newLeafNode(lv_op_2_4, grammarAccess.getMultiplicationAccess().getOpQuestionMarkAsteriskKeyword_0_2_0_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultiplicationRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_4, null);
	    }

    |		lv_op_2_5=	'$/' 
    {
        newLeafNode(lv_op_2_5, grammarAccess.getMultiplicationAccess().getOpDollarSignSolidusKeyword_0_2_0_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultiplicationRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_5, null);
	    }

    |		lv_op_2_6=	'?/' 
    {
        newLeafNode(lv_op_2_6, grammarAccess.getMultiplicationAccess().getOpQuestionMarkSolidusKeyword_0_2_0_0_5());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultiplicationRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_6, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMultiplicationAccess().getRhsMultiplicationParserRuleCall_0_2_1_0()); 
	    }
		lv_rhs_3_0=ruleMultiplication		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultiplicationRule());
	        }
       		set(
       			$current, 
       			"rhs",
        		lv_rhs_3_0, 
        		"Multiplication");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |(	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMultiplicationAccess().getLeftParenthesisKeyword_1_0());
    }

    { 
        newCompositeNode(grammarAccess.getMultiplicationAccess().getExprParserRuleCall_1_1()); 
    }
    this_Expr_5=ruleExpr
    { 
        $current = $this_Expr_5.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMultiplicationAccess().getRightParenthesisKeyword_1_2());
    }
))
;





// Entry rule entryRuleBaseExp
entryRuleBaseExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBaseExpRule()); }
	 iv_ruleBaseExp=ruleBaseExp 
	 { $current=$iv_ruleBaseExp.current; } 
	 EOF 
;

// Rule BaseExp
ruleBaseExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBaseExpAccess().getVarRefParserRuleCall_0()); 
    }
    this_VarRef_0=ruleVarRef
    { 
        $current = $this_VarRef_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBaseExpAccess().getConstantParserRuleCall_1()); 
    }
    this_Constant_1=ruleConstant
    { 
        $current = $this_Constant_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBaseExpAccess().getDynamicValueParserRuleCall_2()); 
    }
    this_DynamicValue_2=ruleDynamicValue
    { 
        $current = $this_DynamicValue_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleVarRef
entryRuleVarRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVarRefRule()); }
	 iv_ruleVarRef=ruleVarRef 
	 { $current=$iv_ruleVarRef.current; } 
	 EOF 
;

// Rule VarRef
ruleVarRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getVarRefAccess().getBtBTParserRuleCall_0_0()); 
	    }
		lv_bt_0_0=ruleBT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVarRefRule());
	        }
       		set(
       			$current, 
       			"bt",
        		lv_bt_0_0, 
        		"BT");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getVarRefAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVarRefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleConstant
entryRuleConstant returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantRule()); }
	 iv_ruleConstant=ruleConstant 
	 { $current=$iv_ruleConstant.current; } 
	 EOF 
;

// Rule Constant
ruleConstant returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_value_0_0=RULE_INT
		{
			newLeafNode(lv_value_0_0, grammarAccess.getConstantAccess().getValueINTTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"INT");
	    }

)
)
;





// Entry rule entryRuleDynamicValue
entryRuleDynamicValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDynamicValueRule()); }
	 iv_ruleDynamicValue=ruleDynamicValue 
	 { $current=$iv_ruleDynamicValue.current; } 
	 EOF 
;

// Rule DynamicValue
ruleDynamicValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='dynamic' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDynamicValueAccess().getDynamicKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDynamicValueAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDynamicValueRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getDynamicValueAccess().getTypeTypeCrossReference_2_0()); 
	}

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDynamicValueAccess().getCommaKeyword_3());
    }
(
(
		lv_name_4_0=RULE_ID
		{
			newLeafNode(lv_name_4_0, grammarAccess.getDynamicValueAccess().getNameIDTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDynamicValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_4_0, 
        		"ID");
	    }

)
)	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDynamicValueAccess().getRightParenthesisKeyword_5());
    }
)
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


