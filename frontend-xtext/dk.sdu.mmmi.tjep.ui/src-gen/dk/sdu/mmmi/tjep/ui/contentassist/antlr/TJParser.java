/*
* generated by Xtext
*/
package dk.sdu.mmmi.tjep.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import dk.sdu.mmmi.tjep.services.TJGrammarAccess;

public class TJParser extends AbstractContentAssistParser {
	
	@Inject
	private TJGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected dk.sdu.mmmi.tjep.ui.contentassist.antlr.internal.InternalTJParser createParser() {
		dk.sdu.mmmi.tjep.ui.contentassist.antlr.internal.InternalTJParser result = new dk.sdu.mmmi.tjep.ui.contentassist.antlr.internal.InternalTJParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getBTAccess().getAlternatives(), "rule__BT__Alternatives");
					put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
					put(grammarAccess.getMemberAccess().getAlternatives(), "rule__Member__Alternatives");
					put(grammarAccess.getStatementAccess().getAlternatives(), "rule__Statement__Alternatives");
					put(grammarAccess.getFieldAssignAccess().getAlternatives(), "rule__FieldAssign__Alternatives");
					put(grammarAccess.getExprAccess().getAlternatives(), "rule__Expr__Alternatives");
					put(grammarAccess.getAnnotatedExprAccess().getAlternatives(), "rule__AnnotatedExpr__Alternatives");
					put(grammarAccess.getObjectOpAccess().getAlternatives(), "rule__ObjectOp__Alternatives");
					put(grammarAccess.getArithExpAccess().getOpAlternatives_2_0_0(), "rule__ArithExp__OpAlternatives_2_0_0");
					put(grammarAccess.getAdditionAccess().getOpAlternatives_2_0_0(), "rule__Addition__OpAlternatives_2_0_0");
					put(grammarAccess.getMultiplicationAccess().getAlternatives(), "rule__Multiplication__Alternatives");
					put(grammarAccess.getMultiplicationAccess().getOpAlternatives_0_2_0_0(), "rule__Multiplication__OpAlternatives_0_2_0_0");
					put(grammarAccess.getBaseExpAccess().getAlternatives(), "rule__BaseExp__Alternatives");
					put(grammarAccess.getProgramAccess().getGroup(), "rule__Program__Group__0");
					put(grammarAccess.getScenarioAccess().getGroup(), "rule__Scenario__Group__0");
					put(grammarAccess.getScenarioAccess().getGroup_5(), "rule__Scenario__Group_5__0");
					put(grammarAccess.getBTAccess().getGroup_0(), "rule__BT__Group_0__0");
					put(grammarAccess.getBTAccess().getGroup_1(), "rule__BT__Group_1__0");
					put(grammarAccess.getPrimitiveAccess().getGroup(), "rule__Primitive__Group__0");
					put(grammarAccess.getClazzAccess().getGroup(), "rule__Clazz__Group__0");
					put(grammarAccess.getClazzAccess().getGroup_2(), "rule__Clazz__Group_2__0");
					put(grammarAccess.getFieldAccess().getGroup(), "rule__Field__Group__0");
					put(grammarAccess.getMethodAccess().getGroup(), "rule__Method__Group__0");
					put(grammarAccess.getMethodAccess().getGroup_3(), "rule__Method__Group_3__0");
					put(grammarAccess.getMethodAccess().getGroup_5(), "rule__Method__Group_5__0");
					put(grammarAccess.getMethodAccess().getGroup_5_1(), "rule__Method__Group_5_1__0");
					put(grammarAccess.getParameterAccess().getGroup(), "rule__Parameter__Group__0");
					put(grammarAccess.getConstructorAccess().getGroup(), "rule__Constructor__Group__0");
					put(grammarAccess.getConstructorAccess().getGroup_3(), "rule__Constructor__Group_3__0");
					put(grammarAccess.getConstructorAccess().getGroup_3_1(), "rule__Constructor__Group_3_1__0");
					put(grammarAccess.getVarDeclAccess().getGroup(), "rule__VarDecl__Group__0");
					put(grammarAccess.getVarDeclAccess().getGroup_2(), "rule__VarDecl__Group_2__0");
					put(grammarAccess.getLocalAssignAccess().getGroup(), "rule__LocalAssign__Group__0");
					put(grammarAccess.getFieldAssignAccess().getGroup_0(), "rule__FieldAssign__Group_0__0");
					put(grammarAccess.getFieldAssignAccess().getGroup_1(), "rule__FieldAssign__Group_1__0");
					put(grammarAccess.getConditionAccess().getGroup(), "rule__Condition__Group__0");
					put(grammarAccess.getWhileAccess().getGroup(), "rule__While__Group__0");
					put(grammarAccess.getReturnAccess().getGroup(), "rule__Return__Group__0");
					put(grammarAccess.getSingleExprAccess().getGroup(), "rule__SingleExpr__Group__0");
					put(grammarAccess.getSingleExprAccess().getGroup_0(), "rule__SingleExpr__Group_0__0");
					put(grammarAccess.getLiftExpAccess().getGroup(), "rule__LiftExp__Group__0");
					put(grammarAccess.getAnnotatedExprAccess().getGroup_0(), "rule__AnnotatedExpr__Group_0__0");
					put(grammarAccess.getAnnotatedExprAccess().getGroup_1(), "rule__AnnotatedExpr__Group_1__0");
					put(grammarAccess.getAnnotatedExprAccess().getGroup_2(), "rule__AnnotatedExpr__Group_2__0");
					put(grammarAccess.getObjectOpAccess().getGroup_0(), "rule__ObjectOp__Group_0__0");
					put(grammarAccess.getObjectOpAccess().getGroup_0_2(), "rule__ObjectOp__Group_0_2__0");
					put(grammarAccess.getObjectOpAccess().getGroup_0_4(), "rule__ObjectOp__Group_0_4__0");
					put(grammarAccess.getObjectOpAccess().getGroup_0_5(), "rule__ObjectOp__Group_0_5__0");
					put(grammarAccess.getObjectOpAccess().getGroup_0_5_2(), "rule__ObjectOp__Group_0_5_2__0");
					put(grammarAccess.getObjectOpAccess().getGroup_0_5_2_1(), "rule__ObjectOp__Group_0_5_2_1__0");
					put(grammarAccess.getObjectOpAccess().getGroup_1(), "rule__ObjectOp__Group_1__0");
					put(grammarAccess.getObjectOpAccess().getGroup_1_2(), "rule__ObjectOp__Group_1_2__0");
					put(grammarAccess.getObjectOpAccess().getGroup_1_4(), "rule__ObjectOp__Group_1_4__0");
					put(grammarAccess.getObjectOpAccess().getGroup_1_5(), "rule__ObjectOp__Group_1_5__0");
					put(grammarAccess.getObjectOpAccess().getGroup_1_5_2(), "rule__ObjectOp__Group_1_5_2__0");
					put(grammarAccess.getObjectOpAccess().getGroup_1_5_2_1(), "rule__ObjectOp__Group_1_5_2_1__0");
					put(grammarAccess.getInstantiationAccess().getGroup(), "rule__Instantiation__Group__0");
					put(grammarAccess.getInstantiationAccess().getGroup_2(), "rule__Instantiation__Group_2__0");
					put(grammarAccess.getInstantiationAccess().getGroup_4(), "rule__Instantiation__Group_4__0");
					put(grammarAccess.getInstantiationAccess().getGroup_4_1(), "rule__Instantiation__Group_4_1__0");
					put(grammarAccess.getArithExpAccess().getGroup(), "rule__ArithExp__Group__0");
					put(grammarAccess.getArithExpAccess().getGroup_2(), "rule__ArithExp__Group_2__0");
					put(grammarAccess.getAdditionAccess().getGroup(), "rule__Addition__Group__0");
					put(grammarAccess.getAdditionAccess().getGroup_2(), "rule__Addition__Group_2__0");
					put(grammarAccess.getMultiplicationAccess().getGroup_0(), "rule__Multiplication__Group_0__0");
					put(grammarAccess.getMultiplicationAccess().getGroup_0_2(), "rule__Multiplication__Group_0_2__0");
					put(grammarAccess.getMultiplicationAccess().getGroup_1(), "rule__Multiplication__Group_1__0");
					put(grammarAccess.getVarRefAccess().getGroup(), "rule__VarRef__Group__0");
					put(grammarAccess.getDynamicValueAccess().getGroup(), "rule__DynamicValue__Group__0");
					put(grammarAccess.getProgramAccess().getPkgnameAssignment_1(), "rule__Program__PkgnameAssignment_1");
					put(grammarAccess.getProgramAccess().getScenariosAssignment_3(), "rule__Program__ScenariosAssignment_3");
					put(grammarAccess.getProgramAccess().getTypesAssignment_4(), "rule__Program__TypesAssignment_4");
					put(grammarAccess.getScenarioAccess().getNameAssignment_1(), "rule__Scenario__NameAssignment_1");
					put(grammarAccess.getScenarioAccess().getTargetAssignment_3(), "rule__Scenario__TargetAssignment_3");
					put(grammarAccess.getScenarioAccess().getAssertionAssignment_5_2(), "rule__Scenario__AssertionAssignment_5_2");
					put(grammarAccess.getPrimitiveAccess().getNameAssignment_1(), "rule__Primitive__NameAssignment_1");
					put(grammarAccess.getClazzAccess().getNameAssignment_1(), "rule__Clazz__NameAssignment_1");
					put(grammarAccess.getClazzAccess().getVariantAssignment_2_1(), "rule__Clazz__VariantAssignment_2_1");
					put(grammarAccess.getClazzAccess().getBaseAssignment_4(), "rule__Clazz__BaseAssignment_4");
					put(grammarAccess.getClazzAccess().getMembersAssignment_6(), "rule__Clazz__MembersAssignment_6");
					put(grammarAccess.getFieldAccess().getBtAssignment_0(), "rule__Field__BtAssignment_0");
					put(grammarAccess.getFieldAccess().getFinalAssignment_1(), "rule__Field__FinalAssignment_1");
					put(grammarAccess.getFieldAccess().getTypeAssignment_2(), "rule__Field__TypeAssignment_2");
					put(grammarAccess.getFieldAccess().getNameAssignment_3(), "rule__Field__NameAssignment_3");
					put(grammarAccess.getMethodAccess().getBtAssignment_0(), "rule__Method__BtAssignment_0");
					put(grammarAccess.getMethodAccess().getTypeAssignment_1(), "rule__Method__TypeAssignment_1");
					put(grammarAccess.getMethodAccess().getNameAssignment_2(), "rule__Method__NameAssignment_2");
					put(grammarAccess.getMethodAccess().getVariantAssignment_3_1(), "rule__Method__VariantAssignment_3_1");
					put(grammarAccess.getMethodAccess().getParamsAssignment_5_0(), "rule__Method__ParamsAssignment_5_0");
					put(grammarAccess.getMethodAccess().getParamsAssignment_5_1_1(), "rule__Method__ParamsAssignment_5_1_1");
					put(grammarAccess.getMethodAccess().getBodyAssignment_8(), "rule__Method__BodyAssignment_8");
					put(grammarAccess.getParameterAccess().getBtAssignment_0(), "rule__Parameter__BtAssignment_0");
					put(grammarAccess.getParameterAccess().getTypeAssignment_1(), "rule__Parameter__TypeAssignment_1");
					put(grammarAccess.getParameterAccess().getNameAssignment_2(), "rule__Parameter__NameAssignment_2");
					put(grammarAccess.getConstructorAccess().getBtAssignment_0(), "rule__Constructor__BtAssignment_0");
					put(grammarAccess.getConstructorAccess().getClazzAssignment_1(), "rule__Constructor__ClazzAssignment_1");
					put(grammarAccess.getConstructorAccess().getParamsAssignment_3_0(), "rule__Constructor__ParamsAssignment_3_0");
					put(grammarAccess.getConstructorAccess().getParamsAssignment_3_1_1(), "rule__Constructor__ParamsAssignment_3_1_1");
					put(grammarAccess.getConstructorAccess().getBodyAssignment_6(), "rule__Constructor__BodyAssignment_6");
					put(grammarAccess.getVarDeclAccess().getBtAssignment_0(), "rule__VarDecl__BtAssignment_0");
					put(grammarAccess.getVarDeclAccess().getTypeAssignment_1(), "rule__VarDecl__TypeAssignment_1");
					put(grammarAccess.getVarDeclAccess().getVariantAssignment_2_1(), "rule__VarDecl__VariantAssignment_2_1");
					put(grammarAccess.getVarDeclAccess().getNameAssignment_3(), "rule__VarDecl__NameAssignment_3");
					put(grammarAccess.getLocalAssignAccess().getBtAssignment_0(), "rule__LocalAssign__BtAssignment_0");
					put(grammarAccess.getLocalAssignAccess().getNameAssignment_1(), "rule__LocalAssign__NameAssignment_1");
					put(grammarAccess.getLocalAssignAccess().getRhsAssignment_3(), "rule__LocalAssign__RhsAssignment_3");
					put(grammarAccess.getFieldAssignAccess().getBtAssignment_0_0(), "rule__FieldAssign__BtAssignment_0_0");
					put(grammarAccess.getFieldAssignAccess().getObjectAssignment_0_1(), "rule__FieldAssign__ObjectAssignment_0_1");
					put(grammarAccess.getFieldAssignAccess().getNameAssignment_0_3(), "rule__FieldAssign__NameAssignment_0_3");
					put(grammarAccess.getFieldAssignAccess().getRhsAssignment_0_5(), "rule__FieldAssign__RhsAssignment_0_5");
					put(grammarAccess.getFieldAssignAccess().getBtAssignment_1_0(), "rule__FieldAssign__BtAssignment_1_0");
					put(grammarAccess.getFieldAssignAccess().getNameAssignment_1_3(), "rule__FieldAssign__NameAssignment_1_3");
					put(grammarAccess.getFieldAssignAccess().getRhsAssignment_1_5(), "rule__FieldAssign__RhsAssignment_1_5");
					put(grammarAccess.getConditionAccess().getBtAssignment_0(), "rule__Condition__BtAssignment_0");
					put(grammarAccess.getConditionAccess().getCondAssignment_3(), "rule__Condition__CondAssignment_3");
					put(grammarAccess.getConditionAccess().getThenBodyAssignment_6(), "rule__Condition__ThenBodyAssignment_6");
					put(grammarAccess.getConditionAccess().getElseBodyAssignment_10(), "rule__Condition__ElseBodyAssignment_10");
					put(grammarAccess.getWhileAccess().getBtAssignment_0(), "rule__While__BtAssignment_0");
					put(grammarAccess.getWhileAccess().getCondAssignment_3(), "rule__While__CondAssignment_3");
					put(grammarAccess.getWhileAccess().getBodyAssignment_6(), "rule__While__BodyAssignment_6");
					put(grammarAccess.getReturnAccess().getBtAssignment_0(), "rule__Return__BtAssignment_0");
					put(grammarAccess.getReturnAccess().getExpAssignment_2(), "rule__Return__ExpAssignment_2");
					put(grammarAccess.getSingleExprAccess().getBtAssignment_0_0(), "rule__SingleExpr__BtAssignment_0_0");
					put(grammarAccess.getSingleExprAccess().getExpAssignment_1(), "rule__SingleExpr__ExpAssignment_1");
					put(grammarAccess.getLiftExpAccess().getExpAssignment_1(), "rule__LiftExp__ExpAssignment_1");
					put(grammarAccess.getAnnotatedExprAccess().getBtAssignment_0_0(), "rule__AnnotatedExpr__BtAssignment_0_0");
					put(grammarAccess.getAnnotatedExprAccess().getExpAssignment_0_1(), "rule__AnnotatedExpr__ExpAssignment_0_1");
					put(grammarAccess.getAnnotatedExprAccess().getBtAssignment_1_1(), "rule__AnnotatedExpr__BtAssignment_1_1");
					put(grammarAccess.getAnnotatedExprAccess().getBtAssignment_2_0(), "rule__AnnotatedExpr__BtAssignment_2_0");
					put(grammarAccess.getAnnotatedExprAccess().getExpAssignment_2_1(), "rule__AnnotatedExpr__ExpAssignment_2_1");
					put(grammarAccess.getObjectOpAccess().getObjectAssignment_0_0(), "rule__ObjectOp__ObjectAssignment_0_0");
					put(grammarAccess.getObjectOpAccess().getQualifierAssignment_0_2_1(), "rule__ObjectOp__QualifierAssignment_0_2_1");
					put(grammarAccess.getObjectOpAccess().getNameAssignment_0_3(), "rule__ObjectOp__NameAssignment_0_3");
					put(grammarAccess.getObjectOpAccess().getVariantAssignment_0_4_1(), "rule__ObjectOp__VariantAssignment_0_4_1");
					put(grammarAccess.getObjectOpAccess().getArgumentAssignment_0_5_2_0(), "rule__ObjectOp__ArgumentAssignment_0_5_2_0");
					put(grammarAccess.getObjectOpAccess().getArgumentAssignment_0_5_2_1_1(), "rule__ObjectOp__ArgumentAssignment_0_5_2_1_1");
					put(grammarAccess.getObjectOpAccess().getQualifierAssignment_1_2_1(), "rule__ObjectOp__QualifierAssignment_1_2_1");
					put(grammarAccess.getObjectOpAccess().getNameAssignment_1_3(), "rule__ObjectOp__NameAssignment_1_3");
					put(grammarAccess.getObjectOpAccess().getVariantAssignment_1_4_1(), "rule__ObjectOp__VariantAssignment_1_4_1");
					put(grammarAccess.getObjectOpAccess().getArgumentAssignment_1_5_2_0(), "rule__ObjectOp__ArgumentAssignment_1_5_2_0");
					put(grammarAccess.getObjectOpAccess().getArgumentAssignment_1_5_2_1_1(), "rule__ObjectOp__ArgumentAssignment_1_5_2_1_1");
					put(grammarAccess.getInstantiationAccess().getTypeAssignment_1(), "rule__Instantiation__TypeAssignment_1");
					put(grammarAccess.getInstantiationAccess().getVariantAssignment_2_1(), "rule__Instantiation__VariantAssignment_2_1");
					put(grammarAccess.getInstantiationAccess().getArgumentAssignment_4_0(), "rule__Instantiation__ArgumentAssignment_4_0");
					put(grammarAccess.getInstantiationAccess().getArgumentAssignment_4_1_1(), "rule__Instantiation__ArgumentAssignment_4_1_1");
					put(grammarAccess.getArithExpAccess().getLhsAssignment_1(), "rule__ArithExp__LhsAssignment_1");
					put(grammarAccess.getArithExpAccess().getOpAssignment_2_0(), "rule__ArithExp__OpAssignment_2_0");
					put(grammarAccess.getArithExpAccess().getRhsAssignment_2_1(), "rule__ArithExp__RhsAssignment_2_1");
					put(grammarAccess.getAdditionAccess().getLhsAssignment_1(), "rule__Addition__LhsAssignment_1");
					put(grammarAccess.getAdditionAccess().getOpAssignment_2_0(), "rule__Addition__OpAssignment_2_0");
					put(grammarAccess.getAdditionAccess().getRhsAssignment_2_1(), "rule__Addition__RhsAssignment_2_1");
					put(grammarAccess.getMultiplicationAccess().getLhsAssignment_0_1(), "rule__Multiplication__LhsAssignment_0_1");
					put(grammarAccess.getMultiplicationAccess().getOpAssignment_0_2_0(), "rule__Multiplication__OpAssignment_0_2_0");
					put(grammarAccess.getMultiplicationAccess().getRhsAssignment_0_2_1(), "rule__Multiplication__RhsAssignment_0_2_1");
					put(grammarAccess.getVarRefAccess().getBtAssignment_0(), "rule__VarRef__BtAssignment_0");
					put(grammarAccess.getVarRefAccess().getNameAssignment_1(), "rule__VarRef__NameAssignment_1");
					put(grammarAccess.getConstantAccess().getValueAssignment(), "rule__Constant__ValueAssignment");
					put(grammarAccess.getDynamicValueAccess().getTypeAssignment_2(), "rule__DynamicValue__TypeAssignment_2");
					put(grammarAccess.getDynamicValueAccess().getNameAssignment_4(), "rule__DynamicValue__NameAssignment_4");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			dk.sdu.mmmi.tjep.ui.contentassist.antlr.internal.InternalTJParser typedParser = (dk.sdu.mmmi.tjep.ui.contentassist.antlr.internal.InternalTJParser) parser;
			typedParser.entryRuleProgram();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public TJGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(TJGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
